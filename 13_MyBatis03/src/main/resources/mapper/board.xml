<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 형식)<![CDATA[쿼리문]]> 
	
		쿼리문을 작성할 때 조건식 기호(>,<,$)를 사용해야 하는데 XML에서는 이런 기호들을
		쿼리문의 조건식 기호로 인식하는 것이 아니라 태그로 인식하는 경우가 발생함. 이런 경우에는 
		에러가 발생함. 따라서 조건식 기호를 단순한 문자열로 인식을 시켜주어야 함.
	 -->  
  <mapper namespace="boardDao">
  	
  	<select id="count" resultType="int">
  		<![CDATA[select count(*) from board]]>
  	</select>
  	
	<select id="list" parameterType="pageDto" resultType="boardDto">
  		<!-- select *from (select row_number() over(order by board_no desc) rnum, b.*from board b)
  		 where rnum <![CDATA[>=]]> #{startNo} and rnum <![CDATA[<=]]> #{endNo} -->
  		 <![CDATA[
  		 select *from (select row_number() over(order by board_no desc) rnum, b.*from board b)
  		 where rnum >= #{startNo} and rnum <=#{endNo} 
  		 ]]>
  	</select> 
  	<!-- 
  		일반적으로 DB작업을 하다보면 먼저 사전에 어떤 값을 가져와서 해당 값을 증가시킨 후 입력하거나
  		혹은 입력된 후에 증가값을 가져올 필요가 있는 경우가 많이 발생한다.
  		이런 경우 MyBatis에서 제공하는 selectKey 태그를 이용하면 별도의 쿼리 로직을 사용한
  		필요 없이 일관 처리 작업을 할 수 있게 됨.
  			keyProperty 속성은 해당 결과값이 들어갈 DTO객체의 멤버 변수명이 오면 된다.
  			order 속성은 해당 쿼리문의 실행 순서를 의미함. BEFORE라고 하면  insert 쿼리문 이전에
  			selectKey가 실행이 되고 AFTER라고 하면 insert 쿼리문 이후에 
  			selectKey가 실행이 된다.
  		주의사항 : 반드시 멤버변수에 해당하는 setter()외 getter() 메서드가 존재해 야 함.
  	 -->
  	<insert id="write" parameterType="boardDto">
  		<selectKey resultType="int" keyProperty="board_no" order="BEFORE">
  			select max(board_no) from board
  		</selectKey>
  		insert into board values(#{board_no}+1, #{board_writer}, #{board_title},
  		 #{board_cont}, #{board_pwd}, default, sysdate,'')
  	</insert>
  	
  	<update id="hit" parameterType="int">
  		update board set board_hit = board_hit + 1 where board_no = #{no}
  	</update>
  	
  	<select id="cont" parameterType="int" resultType="boardDto">
  		select *from board where board_no = #{no} 
  	</select>
  	
  	<update id="edit" parameterType="boardDto">
  		update board set board_title = #{board_title}, board_cont = #{board_cont},
  						board_update = sysdate where board_no = #{board_no}
  	</update>
  	
  	<delete id="del" parameterType="int" >
  		delete from board where board_no = #{no}
  	</delete>
  	
  	<update id="seq" parameterType="int">
  		update board set board_no = board_no -1 where board_no <![CDATA[>]]> #{no}
  	</update>
  	
  	<!-- 
  	<option value="title">제목</option>
		<option value="cont">내용</option>
		<option value="title_cont">제목+내용</option>
		<option value="writer">작성자</option>
  	 -->
  	 
	<select id="titleCount" parameterType="String" resultType="int">
		select count(*)from board where board_title like '%'|| #{keyword} || '%'
	</select>
	
	<select id="contCount" parameterType="String" resultType="int">
		select count(*)from board where board_cont like '%'|| #{keyword} || '%'
	</select>
	
	<select id="title_contCount" parameterType="String" resultType="int">
		select count(*)from board where board_title like '%'|| #{keyword} || '%' or board_cont like '%'|| #{keyword} || '%'
	</select>
	
	<select id="writerCount" parameterType="String" resultType="int">
		select count(*)from board where board_writer like '%'|| #{keyword} || '%'
	</select>
	
	
	
	<select id="titleList" parameterType="pageDto" resultType="boardDto">
		<![CDATA[
  		 select *from (select row_number() over(order by board_no desc) rnum, b.*from board b 
  		 where board_title like '%'|| #{keyword} || '%')
  		 where rnum >= #{startNo} and rnum <=#{endNo} 
  		 ]]>
	</select>
	
	<select id="contList" parameterType="pageDto" resultType="boardDto">
		<![CDATA[
  		 select *from (select row_number() over(order by board_no desc) rnum, b.*from board b 
  		 where board_cont like '%'|| #{keyword} || '%')
  		 where rnum >= #{startNo} and rnum <=#{endNo} 
  		 ]]>
	</select>
	
	<select id="title_contList" parameterType="pageDto" resultType="boardDto">
		<![CDATA[
  		 select *from (select row_number() over(order by board_no desc) rnum, b.*from board b 
  		 where board_title like '%'|| #{keyword} || '%' or board_cont like '%'|| #{keyword} || '%')
  		 where rnum >= #{startNo} and rnum <=#{endNo} 
  		 ]]>
	</select>
	
	<select id="writerList" parameterType="pageDto" resultType="boardDto">
		<![CDATA[
  		 select *from (select row_number() over(order by board_no desc) rnum, b.*from board b 
  		 where board_writer like '%'|| #{keyword} || '%')
  		 where rnum >= #{startNo} and rnum <=#{endNo} 
  		 ]]>
	</select>
	
	
  	
  	
  
  </mapper>